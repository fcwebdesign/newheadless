{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lisalombard/wp-next-headless/pages/posts/[slug].js\";\nimport Image from 'next/image';\nexport default function Post(data) {\n  const post = data.post;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      width: \"640\",\n      height: \"426\",\n      src: post.featuredImage.node.sourceUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      dangerouslySetInnerHTML: {\n        __html: post.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticProps(context) {\n  const res = await fetch('http://test.local/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `\n                query SinglePost($id: ID!, $idType: PostIdType!) {\n                    post(id: $id, idType: $idType) {\n                        title\n                        slug\n                        content\n                        featuredImage {\n                            node {\n                                sourceUrl\n                            }\n                        }\n                    }\n                }\n            `,\n      variables: {\n        id: context.params.slug,\n        idType: 'SLUG'\n      }\n    })\n  });\n  const json = await res.json();\n  return {\n    props: {\n      post: json.data.post\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const res = await fetch('http://headlesswpnext.local/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `\n            query AllPostsQuery {\n                posts {\n                    nodes {\n                        slug\n                        content\n                        title\n                        featuredImage {\n                            node {\n                                sourceUrl\n                            }\n                        }\n                    }\n                }\n            }\n        `\n    })\n  });\n  const json = await res.json();\n  const posts = json.data.posts.nodes;\n  const paths = posts.map(post => ({\n    params: {\n      slug: post.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/lisalombard/wp-next-headless/pages/posts/[slug].js"],"names":["Image","Post","data","post","title","featuredImage","node","sourceUrl","__html","content","getStaticProps","context","res","fetch","method","headers","body","JSON","stringify","query","variables","id","params","slug","idType","json","props","getStaticPaths","posts","nodes","paths","map","fallback"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,eAAe,SAASC,IAAT,CAAeC,IAAf,EAAqB;AAEhC,QAAMC,IAAI,GAAGD,IAAI,CAACC,IAAlB;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,KAAb;AAAmB,MAAA,MAAM,EAAC,KAA1B;AAAgC,MAAA,GAAG,EAAED,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwBC;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAS,MAAA,uBAAuB,EAAE;AAACC,QAAAA,MAAM,EAAEL,IAAI,CAACM;AAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;AACjDC,IAAAA,MAAM,EAAE,MADyC;AAEjDC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFwC;AAGjDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAd6B;AAejBC,MAAAA,SAAS,EAAE;AACPC,QAAAA,EAAE,EAAEV,OAAO,CAACW,MAAR,CAAeC,IADZ;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAfM,KAAf;AAH2C,GAA9B,CAAvB;AAyBA,QAAMC,IAAI,GAAG,MAAMb,GAAG,CAACa,IAAJ,EAAnB;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHvB,MAAAA,IAAI,EAAEsB,IAAI,CAACvB,IAAL,CAAUC;AADb;AADJ,GAAP;AAMH;AAED,OAAO,eAAewB,cAAf,GAAgC;AAEnC,QAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwC;AAC3DC,IAAAA,MAAM,EAAE,MADmD;AAE3DC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFkD;AAG3DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhB6B,KAAf;AAHqD,GAAxC,CAAvB;AAsBA,QAAMM,IAAI,GAAG,MAAMb,GAAG,CAACa,IAAJ,EAAnB;AACA,QAAMG,KAAK,GAAGH,IAAI,CAACvB,IAAL,CAAU0B,KAAV,CAAgBC,KAA9B;AAEA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAW5B,IAAD,KAAW;AAC/BmB,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAEpB,IAAI,CAACoB;AAAb;AADuB,GAAX,CAAV,CAAd;AAIA,SAAO;AAAEO,IAAAA,KAAF;AAASE,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AAEH","sourcesContent":["import Image from 'next/image'\n\nexport default function Post( data ){\n\n    const post = data.post;\n\n    return (\n        <div>\n            <h1>{post.title}</h1>\n            <Image width=\"640\" height=\"426\" src={post.featuredImage.node.sourceUrl} />\n            <article dangerouslySetInnerHTML={{__html: post.content}}></article>\n        </div>\n    )\n\n}\n\nexport async function getStaticProps(context) {\n\n    const res = await fetch('http://test.local/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n                query SinglePost($id: ID!, $idType: PostIdType!) {\n                    post(id: $id, idType: $idType) {\n                        title\n                        slug\n                        content\n                        featuredImage {\n                            node {\n                                sourceUrl\n                            }\n                        }\n                    }\n                }\n            `,\n            variables: {\n                id: context.params.slug,\n                idType: 'SLUG'\n            }\n        })\n    })\n\n    const json = await res.json()\n\n    return {\n        props: {\n            post: json.data.post,\n        },\n    }\n\n}\n\nexport async function getStaticPaths() {\n\n    const res = await fetch('http://headlesswpnext.local/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n            query AllPostsQuery {\n                posts {\n                    nodes {\n                        slug\n                        content\n                        title\n                        featuredImage {\n                            node {\n                                sourceUrl\n                            }\n                        }\n                    }\n                }\n            }\n        `})\n    })\n\n    const json = await res.json()\n    const posts = json.data.posts.nodes;\n\n    const paths = posts.map((post) => ({\n        params: { slug: post.slug },\n    }))\n\n    return { paths, fallback: false }\n\n}\n"]},"metadata":{},"sourceType":"module"}